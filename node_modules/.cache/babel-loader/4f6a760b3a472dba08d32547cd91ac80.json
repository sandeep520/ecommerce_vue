{"ast":null,"code":"import axios from \"axios\";\nimport router from \"@/router\";\nexport default {\n  name: \"productDetails\",\n\n  data() {\n    return {\n      product: [],\n      cart: []\n    };\n  },\n\n  methods: {\n    addProduct(item) {\n      let user = localStorage.getItem(\"user\");\n\n      if (user) {\n        // alert(\"Add to Cart Successfully\");\n        // this.cart.push(item);\n        // localStorage.setItem(\"cart\", JSON.stringify(this.cart));\n        let oldData = JSON.parse(localStorage.getItem(\"cart\"));\n        const {\n          title,\n          category,\n          description,\n          id,\n          image,\n          price\n        } = item;\n        const newCart = {\n          id: id,\n          title: title,\n          image: image,\n          price: price,\n          category: category,\n          description: description,\n          quntity: 1\n        };\n\n        if (oldData == null) {\n          localStorage.setItem(\"cart\", JSON.stringify(newCart));\n        } else {\n          const target = Object.assign(oldData, newCart);\n          console.log(Object.entries(target));\n          let check = oldData.find(old => {\n            return old.id == newCart.id;\n          });\n\n          if (check != \"\") {\n            router.push(\"/cart/\" + this.$route.params.id);\n          } else {\n            localStorage.setItem(\"cart\", JSON.stringify(target));\n          } // localStorage.setItem(\"cart\", JSON.stringify(oldData));\n\n        } // router.push(\"/cart/\" + this.$route.params.id);\n        // swal({ icon: \"success\" });\n\n      } else {\n        alert(\"Please users does not exist\");\n        router.push(\"/login\");\n      }\n    },\n\n    moreItem() {\n      router.push(\"/\");\n    } // ===========================================================================\n    // async adddata(){\n    //   let additem = await axios.post(\"http://localhost:3000/cart\",{\n    //     id:this.product.id,\n    //     price:this.product.price,\n    //     title:this.product.title,\n    //     category:this.product.category\n    //   })\n    //   console.log(additem)\n    //   this.cart.push(additem.data)\n    // }\n    // ===========================================================================\n\n\n  },\n\n  async mounted() {\n    const result = await axios.get(\"https://fakestoreapi.com/products/\" + this.$route.params.id); // console.log(result);\n    // let temp = JSON.parse(localStorage.getItem(\"cart\"));\n    // temp.push(this.cart);\n    // console.log(temp, \"temp\");\n    // console.log(this.cart);\n\n    this.product.push(result.data); // console.log(this.product);\n  }\n\n};","map":{"version":3,"mappings":"AA8CA;AACA;AAEA;EACAA,sBADA;;EAEAC;IACA;MACAC,WADA;MAEAC;IAFA;EAIA,CAPA;;EAQAC;IACAC;MACA;;MACA;QACA;QACA;QACA;QACA;QACA;UAAAC;UAAAC;UAAAC;UAAAC;UAAAC;UAAAC;QAAA;QACA;UACAF,MADA;UAEAH,YAFA;UAGAI,YAHA;UAIAC,YAJA;UAKAJ,kBALA;UAMAC,wBANA;UAOAI;QAPA;;QASA;UACAC;QACA,CAFA,MAEA;UACA;UACAC;UACA;YACA;UACA,CAFA;;UAGA;YACAC;UACA,CAFA,MAEA;YACAF;UACA,CAVA,CAWA;;QACA,CA7BA,CA8BA;QACA;;MACA,CAhCA,MAgCA;QACAG;QACAD;MACA;IACA,CAvCA;;IAwCAE;MACAF;IACA,CA1CA,CA4CA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;;;EAzDA,CARA;;EAoEA;IACA,+BACA,4DADA,EADA,CAIA;IACA;IACA;IACA;IACA;;IACA,+BATA,CAUA;EACA;;AA/EA","names":["name","data","product","cart","methods","addProduct","title","category","description","id","image","price","quntity","localStorage","console","router","alert","moreItem"],"sourceRoot":"src/components","sources":["ProductDetails.vue"],"sourcesContent":["<template>\n  <div class=\"mt-4\">\n    <div class=\"icon\">\n      <router-link to=\"/\"> <i class=\"fa fa-arrow-left fa-2x\"></i></router-link>\n    </div>\n\n    <h1>Product Details...</h1>\n    <div\n      v-for=\"item in product\"\n      v-bind:key=\"item.id\"\n      class=\"container d-flex mt-5\"\n    >\n      <div class=\"col-md-6 mt-5\">\n        <div class=\"zoom w-50\">\n          <img\n            class=\"card-img-top img-fuild\"\n            v-bind:src=\"item.image\"\n            alt=\"Card image cap\"\n          />\n        </div>\n      </div>\n      <div class=\"col-6 text-start mt-5\">\n        <h4>{{ item.title }}</h4>\n        <h4 class=\"mt-4\">{{ item.description }}</h4>\n        <h5 class=\"mt-4\">Category :- {{ item.category }}</h5>\n        <h5 class=\"mt-4\">Price :- $ {{ item.price }}</h5>\n        <button\n          v-on:click=\"addProduct(item)\"\n          style=\"margin-right: 15px\"\n          class=\"btn btn-primary mt-4\"\n        >\n          Add to cart\n        </button>\n        <button\n          v-on:click=\"moreItem\"\n          style=\"margin-right: 15px\"\n          class=\"btn btn-primary mt-4\"\n        >\n          Add more Item....\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport router from \"@/router\";\n\nexport default {\n  name: \"productDetails\",\n  data() {\n    return {\n      product: [],\n      cart: [],\n    };\n  },\n  methods: {\n    addProduct(item) {\n      let user = localStorage.getItem(\"user\");\n      if (user) {\n        // alert(\"Add to Cart Successfully\");\n        // this.cart.push(item);\n        // localStorage.setItem(\"cart\", JSON.stringify(this.cart));\n        let oldData = JSON.parse(localStorage.getItem(\"cart\"));\n        const { title, category, description, id, image, price } = item;\n        const newCart = {\n          id: id,\n          title: title,\n          image: image,\n          price: price,\n          category: category,\n          description: description,\n          quntity: 1,\n        };\n        if (oldData == null) {\n          localStorage.setItem(\"cart\", JSON.stringify(newCart));\n        } else {\n          const target = Object.assign(oldData, newCart);\n          console.log(Object.entries(target));\n          let check = oldData.find((old) => {\n            return old.id == newCart.id;\n          });\n          if (check != \"\") {\n            router.push(\"/cart/\" + this.$route.params.id);\n          } else {\n            localStorage.setItem(\"cart\", JSON.stringify(target));\n          }\n          // localStorage.setItem(\"cart\", JSON.stringify(oldData));\n        }\n        // router.push(\"/cart/\" + this.$route.params.id);\n        // swal({ icon: \"success\" });\n      } else {\n        alert(\"Please users does not exist\");\n        router.push(\"/login\");\n      }\n    },\n    moreItem() {\n      router.push(\"/\");\n    },\n\n    // ===========================================================================\n\n    // async adddata(){\n    //   let additem = await axios.post(\"http://localhost:3000/cart\",{\n    //     id:this.product.id,\n    //     price:this.product.price,\n    //     title:this.product.title,\n    //     category:this.product.category\n    //   })\n    //   console.log(additem)\n    //   this.cart.push(additem.data)\n    // }\n\n    // ===========================================================================\n  },\n\n  async mounted() {\n    const result = await axios.get(\n      \"https://fakestoreapi.com/products/\" + this.$route.params.id\n    );\n    // console.log(result);\n    // let temp = JSON.parse(localStorage.getItem(\"cart\"));\n    // temp.push(this.cart);\n    // console.log(temp, \"temp\");\n    // console.log(this.cart);\n    this.product.push(result.data);\n    // console.log(this.product);\n  },\n};\n</script>\n\n<style scoped>\n.icon {\n  margin-right: 75%;\n}\n.zoom :hover {\n  -ms-transform: scale(1.2); /* IE 9 */\n  -webkit-transform: scale(1.2); /* Safari 3-8 */\n  transform: scale(1.2);\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}