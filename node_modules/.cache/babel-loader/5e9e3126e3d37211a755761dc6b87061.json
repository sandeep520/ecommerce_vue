{"ast":null,"code":"import axios from \"axios\";\nimport router from \"@/router\";\nexport default {\n  name: \"cart\",\n  props: [\"addCart\"],\n\n  data() {\n    return {\n      count: 1,\n      cart: [],\n      product: \"\"\n    };\n  },\n\n  methods: {\n    // async deleteProduct(id) {\n    //   let result = await axios.delete(\n    //     \"https://fakestoreapi.com/products/\" + id\n    //   );\n    //   console.log(result);\n    // },\n    deleteProduct(cart) {\n      this.cart.splice(cart, 1);\n    },\n\n    increment(item) {\n      let found = this.cart.findIndex(product => product.id === item.id);\n\n      if (found) {\n        this.count++;\n      }\n    },\n\n    decrement(count) {\n      if (this.count > 1) {\n        this.count--;\n      }\n    },\n\n    moreItem() {\n      router.push(\"/\");\n    },\n\n    async addProduct() {\n      const result = await axios.get(\"https://fakestoreapi.com/products/\" + this.$route.params.id); // const  { title, category, description, id, image, price } = result.data;\n\n      this.cart = result.data;\n      console.log(this.cart, result.data);\n      console.log(result.data);\n      const newCart = {\n        id: id,\n        title: title,\n        image: image,\n        price: price,\n        category: category,\n        description: description\n      };\n      this.cart.push(newCart);\n      console.log([{ ...this.cart\n      }]);\n      let aa = JSON.parse(localStorage.getItem(\"cart\"));\n      aa.push(this.cart[0]);\n      console.log(aa);\n      localStorage.setItem(\"cart\", JSON.stringify(aa));\n    } // addToCart() {\n    //   var addCart = new Array();\n    //   addCart.push(this.cart);\n    //   console.log(this.cart, ...addCart, \"page\");\n    //   // router.push(\"/cart\");\n    // },\n\n\n  },\n\n  mounted() {\n    this.addProduct();\n  },\n\n  computed: {\n    ifEmpty() {\n      return this.cart.length === 0 ? \"Cart is empty....\" : undefined;\n    }\n\n  } // async mounted() {\n  //   const result = await axios.get(\n  //     \"https://fakestoreapi.com/products/\" + this.$route.params.id\n  //   );\n  //   console.log(result);\n  //       this.card.push(result.data);\n  //   this.card = result.data;\n  //   console.log(this.cart);\n  // },\n\n};","map":{"version":3,"mappings":"AAqDA;AACA;AACA;EACAA,YADA;EAEAC,kBAFA;;EAGAC;IACA;MACAC,QADA;MAEAC,QAFA;MAGAC;IAHA;EAKA,CATA;;EAWAC;IACA;IACA;IACA;IACA;IACA;IACA;IAEAC;MACA;IACA,CAVA;;IAWAC;MACA;;MACA;QACA;MACA;IAEA,CAjBA;;IAkBAC;MACA;QACA;MACA;IACA,CAtBA;;IAuBAC;MACAC;IACA,CAzBA;;IA2BA;MACA,+BACA,4DADA,EADA,CAKA;;MACA;MACAC;MACAA;MACA;QACAC,MADA;QAEAC,YAFA;QAGAC,YAHA;QAIAC,YAJA;QAKAC,kBALA;QAMAC;MANA;MAQA;MACAN;MAAA;MACA;MACAO;MACAP;MACAQ;IACA,CAlDA,CAoDA;IACA;IACA;IACA;IACA;IACA;;;EAzDA,CAXA;;EAuEAC;IACA;EACA,CAzEA;;EA2EAC;IACAC;MACA;IACA;;EAHA,CA3EA,CAiFA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAzFA","names":["name","props","data","count","cart","product","methods","deleteProduct","increment","decrement","moreItem","router","console","id","title","image","price","category","description","aa","localStorage","mounted","computed","ifEmpty"],"sourceRoot":"src/components","sources":["Cart.vue"],"sourcesContent":["<template>\n  <div>\n    <h2 class=\"text-center mt-5\">{{ ifEmpty }}</h2>\n    <table class=\"table table-bordered mt-5\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Title</th>\n          <th scope=\"col\">Image</th>\n          <th scope=\"col\">Quantity</th>\n          <th scope=\"col\">Price</th>\n          <th scope=\"col\">Category</th>\n          <th scope=\"col\">Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"item in cart\" v-bind:key=\"item.id\">\n          <th scope=\"row\">{{ item.id }}</th>\n          <td>{{ item.title }}</td>\n          <td class=\"cart-img\">\n            <img v-bind:src=\"item.image\" />\n          </td>\n\n          <td class=\"d-flex\">\n            <button\n              v-on:click.prevent=\"decrement(item.id)\" class=\"btn btn-primary mx-2\">-</button>\n            <p class=\"my-2\">{{ count }}</p>\n             <button v-on:click.prevent=\"increment\" class=\"btn btn-primary mx-2\">\n              +\n            </button>\n          </td>\n\n          <td>{{ item.price * count }}</td>\n          <td>{{ item.category }}</td>\n          <td>\n            <button v-on:click=\"deleteProduct(item)\" class=\"btn btn-danger\">\n              Delete\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <button\n      v-on:click=\"moreItem\"\n      style=\"margin-right: 15px\"\n      class=\"btn btn-primary mt-4\"\n    >\n      Add more Item....\n    </button>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport router from \"@/router\";\nexport default {\n  name: \"cart\",\n  props: [\"addCart\"],\n  data() {\n    return {\n      count: 1,\n      cart: [],\n      product: \"\",\n    };\n  },\n\n  methods: {\n    // async deleteProduct(id) {\n    //   let result = await axios.delete(\n    //     \"https://fakestoreapi.com/products/\" + id\n    //   );\n    //   console.log(result);\n    // },\n\n    deleteProduct(cart) {\n      this.cart.splice(cart, 1);\n    },\n    increment(item) {\n     let found = this.cart.findIndex(product => product.id === item.id);\n     if (found) {\n       this.count ++\n     }\n\n    },\n    decrement(count) {\n      if (this.count > 1) {\n        this.count--;\n      }\n    },\n    moreItem() {\n      router.push(\"/\");\n    },\n\n    async addProduct() {\n      const result = await axios.get(\n        \"https://fakestoreapi.com/products/\" + this.$route.params.id\n      );\n\n      // const  { title, category, description, id, image, price } = result.data;\n        this.cart = result.data\n        console.log(this.cart,result.data);\n      console.log(result.data);\n      const newCart = {\n        id: id,\n        title: title,\n        image: image,\n        price: price,\n        category: category,\n        description: description,\n      };\n      this.cart.push(newCart);\n      console.log([{...this.cart }]);\n      let aa = JSON.parse(localStorage.getItem(\"cart\"));\n      aa.push(this.cart[0]);\n      console.log(aa);\n      localStorage.setItem(\"cart\", JSON.stringify(aa));\n    },\n\n    // addToCart() {\n    //   var addCart = new Array();\n    //   addCart.push(this.cart);\n    //   console.log(this.cart, ...addCart, \"page\");\n    //   // router.push(\"/cart\");\n    // },\n  },\n\n  mounted() {\n    this.addProduct();\n  },\n\n  computed: {\n    ifEmpty() {\n      return this.cart.length === 0 ? \"Cart is empty....\" : undefined;\n    },\n  },\n\n  // async mounted() {\n  //   const result = await axios.get(\n  //     \"https://fakestoreapi.com/products/\" + this.$route.params.id\n  //   );\n  //   console.log(result);\n  //       this.card.push(result.data);\n  //   this.card = result.data;\n  //   console.log(this.cart);\n  // },\n};\n</script>\n\n<style scoped>\n.table {\n  width: 60%;\n  margin: 0 auto;\n}\n.cart-img img {\n  width: 50px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}