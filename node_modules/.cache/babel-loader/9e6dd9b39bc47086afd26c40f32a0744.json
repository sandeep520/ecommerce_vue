{"ast":null,"code":"import axios from \"axios\";\nimport router from \"@/router\";\nexport default {\n  name: \"cart\",\n  props: [\"addCart\"],\n\n  data() {\n    return {\n      count: 1,\n      cart: [],\n      product: \"\"\n    };\n  },\n\n  methods: {\n    // async deleteProduct(id) {\n    //   let result = await axios.delete(\n    //     \"https://fakestoreapi.com/products/\" + id\n    //   );\n    //   console.log(result);\n    // },\n    deleteProduct(cart) {\n      this.cart.splice(cart, 1);\n    },\n\n    // increment(item) {\n    //   let found = this.cart.findIndex((product) => product.id === item.id);\n    //   if (found) {\n    //     this.count++;\n    //   }\n    // },\n    increment(id) {\n      let arr = this.cart.find(data => {\n        return data.id == id;\n      });\n      console.log(this.cart);\n      arr.quantity++;\n    },\n\n    decrement(id) {\n      let arr = this.cart.find(data => {\n        return data.id == id;\n      });\n      arr.quantity--;\n    },\n\n    moreItem() {\n      router.push(\"/\");\n    },\n\n    async addProduct() {\n      const result = await axios.get(\"https://fakestoreapi.com/products/\" + this.$route.params.id);\n      const {\n        title,\n        category,\n        description,\n        id,\n        image,\n        price\n      } = result.data;\n      const newCart = {\n        id: id,\n        title: title,\n        image: image,\n        price: price,\n        category: category,\n        description: description\n      };\n      let aa = [newCart];\n      let oldCart = JSON.parse(localStorage.getItem(\"cart\")); // console.log(oldCart);\n\n      if (oldCart != null) {\n        let findCart = oldCart.find(data => {\n          return data.id == newCart.id;\n        });\n        this.cart.push(findCart);\n        let other = oldCart.find(data => {\n          if (data.id != newCart.id) {}\n        }); // console.log(findCart);\n      }\n    } // addToCart() {\n    //   var addCart = new Array();\n    //   addCart.push(this.cart);\n    //   console.log(this.cart, ...addCart, \"page\");\n    //   // router.push(\"/cart\");\n    // },\n\n\n  },\n\n  mounted() {\n    this.addProduct();\n  },\n\n  computed: {\n    ifEmpty() {\n      return this.cart.length === 0 ? \"Cart is empty....\" : undefined;\n    }\n\n  } // async mounted() {\n  //   const result = await axios.get(\n  //     \"https://fakestoreapi.com/products/\" + this.$route.params.id\n  //   );\n  //   console.log(result);\n  //       this.card.push(result.data);\n  //   this.card = result.data;\n  //   console.log(this.cart);\n  // },\n\n};","map":{"version":3,"mappings":"AA4DA;AACA;AACA;EACAA,YADA;EAEAC,kBAFA;;EAGAC;IACA;MACAC,QADA;MAEAC,QAFA;MAGAC;IAHA;EAKA,CATA;;EAWAC;IACA;IACA;IACA;IACA;IACA;IACA;IAEAC;MACA;IACA,CAVA;;IAWA;IACA;IACA;IACA;IACA;IACA;IAEAC;MACA;QACA;MACA,CAFA;MAGAC;MACAC;IACA,CAxBA;;IAyBAC;MACA;QACA;MACA,CAFA;MAGAD;IACA,CA9BA;;IAgCAE;MACAC;IACA,CAlCA;;IAoCA;MACA,+BACA,4DADA;MAIA;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;MAAA;MACA;QACAF,MADA;QAEAH,YAFA;QAGAI,YAHA;QAIAC,YAJA;QAKAJ,kBALA;QAMAC;MANA;MAQA;MACA,uDAfA,CAgBA;;MACA;QACA;UACA;QACA,CAFA;QAGA;QACA;UACA,4BACA;QACA,CAHA,EALA,CASA;MACA;IACA,CAhEA,CAkEA;IACA;IACA;IACA;IACA;IACA;;;EAvEA,CAXA;;EAqFAI;IACA;EACA,CAvFA;;EAyFAC;IACAC;MACA;IACA;;EAHA,CAzFA,CA+FA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAvGA","names":["name","props","data","count","cart","product","methods","deleteProduct","increment","console","arr","decrement","moreItem","router","title","category","description","id","image","price","mounted","computed","ifEmpty"],"sourceRoot":"src/components","sources":["Cart.vue"],"sourcesContent":["<template>\n  <div>\n    <h2 class=\"text-center mt-5\">{{ ifEmpty }}</h2>\n    <table class=\"table table-bordered mt-5\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Title</th>\n          <th scope=\"col\">Image</th>\n          <th scope=\"col\">Quantity</th>\n          <th scope=\"col\">Price</th>\n          <th scope=\"col\">Category</th>\n          <th scope=\"col\">Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"item in cart\" v-bind:key=\"item.id\">\n          <th scope=\"row\">{{ item.id }}</th>\n          <td>{{ item.title }}</td>\n          <td class=\"cart-img\">\n            <img v-bind:src=\"item.image\" />\n          </td>\n\n          <td class=\"d-flex\">\n            <button\n              v-on:click.prevent=\"decrement(item.id)\"\n              class=\"btn btn-primary mx-2\"\n            >\n              -\n            </button>\n            <p class=\"my-2\">{{ count }}</p>\n            <button\n              v-on:click.prevent=\"increment(item.id)\"\n              class=\"btn btn-primary mx-2\"\n            >\n              +\n            </button>\n          </td>\n\n          <td>{{ item.price * count }}</td>\n          <td>{{ item.category }}</td>\n          <td>\n            <button v-on:click=\"deleteProduct(item)\" class=\"btn btn-danger\">\n              Delete\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <button\n      v-on:click=\"moreItem\"\n      style=\"margin-right: 15px\"\n      class=\"btn btn-primary mt-4\"\n    >\n      Add more Item....\n    </button>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport router from \"@/router\";\nexport default {\n  name: \"cart\",\n  props: [\"addCart\"],\n  data() {\n    return {\n      count: 1,\n      cart: [],\n      product: \"\",\n    };\n  },\n\n  methods: {\n    // async deleteProduct(id) {\n    //   let result = await axios.delete(\n    //     \"https://fakestoreapi.com/products/\" + id\n    //   );\n    //   console.log(result);\n    // },\n\n    deleteProduct(cart) {\n      this.cart.splice(cart, 1);\n    },\n    // increment(item) {\n    //   let found = this.cart.findIndex((product) => product.id === item.id);\n    //   if (found) {\n    //     this.count++;\n    //   }\n    // },\n\n    increment(id) {\n      let arr = this.cart.find((data) => {\n        return data.id == id;\n      });\n      console.log(this.cart);\n      arr.quantity++;\n    },\n    decrement(id) {\n      let arr = this.cart.find((data) => {\n        return data.id == id;\n      });\n      arr.quantity--;\n    },\n\n    moreItem() {\n      router.push(\"/\");\n    },\n\n    async addProduct() {\n      const result = await axios.get(\n        \"https://fakestoreapi.com/products/\" + this.$route.params.id\n      );\n\n      const { title, category, description, id, image, price } = result.data;\n      const newCart = {\n        id: id,\n        title: title,\n        image: image,\n        price: price,\n        category: category,\n        description: description,\n      };\n      let aa = [newCart];\n      let oldCart = JSON.parse(localStorage.getItem(\"cart\"));\n      // console.log(oldCart);\n      if (oldCart != null) {\n        let findCart = oldCart.find((data) => {\n          return data.id == newCart.id;\n        });\n        this.cart.push(findCart);\n        let other = oldCart.find((data) => {\n          if (data.id != newCart.id) {\n          }\n        });\n        // console.log(findCart);\n      }\n    },\n\n    // addToCart() {\n    //   var addCart = new Array();\n    //   addCart.push(this.cart);\n    //   console.log(this.cart, ...addCart, \"page\");\n    //   // router.push(\"/cart\");\n    // },\n  },\n\n  mounted() {\n    this.addProduct();\n  },\n\n  computed: {\n    ifEmpty() {\n      return this.cart.length === 0 ? \"Cart is empty....\" : undefined;\n    },\n  },\n\n  // async mounted() {\n  //   const result = await axios.get(\n  //     \"https://fakestoreapi.com/products/\" + this.$route.params.id\n  //   );\n  //   console.log(result);\n  //       this.card.push(result.data);\n  //   this.card = result.data;\n  //   console.log(this.cart);\n  // },\n};\n</script>\n\n<style scoped>\n.table {\n  width: 60%;\n  margin: 0 auto;\n}\n.cart-img img {\n  width: 50px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}